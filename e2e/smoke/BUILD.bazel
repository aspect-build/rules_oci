load("@aspect_bazel_lib//lib:testing.bzl", "assert_json_matches")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")

# An example stamping annotations
# Run this using `bazel run :load --stamp --workspace_status_command=./workspace_status_command.sh`
# to see the `docker inspect --format='{{.Created}}' my/image:latest` print the image build date.
expand_template(
    name = "annotations",
    out = "annotations.txt",
    stamp_substitutions = {"1970-01-01T00:00:00Z": "{{BUILD_ISO8601}}"},
    template = "annotations.txt.template",
)

# SMOKE TEST: oci_image
oci_image(
    name = "image",
    annotations = ":annotations.txt",
    base = "@distroless_base",
    cmd = [
        "--arg1",
        "--arg2",
    ],
    entrypoint = ["/custom_bin"],
    env = {
        "ENV": "/test",
    },
)

# SMOKE TEST: oci_tarball
tags = [
    "my/image:some-tag",
    "my/image:latest",
]

oci_load(
    name = "load",
    image = ":image",
    repo_tags = tags,
)

filegroup(
    name = "tarball.tar",
    srcs = [":load"],
    output_group = "tarball",
)

container_structure_test(
    name = "test",
    configs = ["test.yaml"],
    image = ":image",
)

genrule(
    name = "tar_manifest",
    srcs = [":tarball.tar"],
    outs = ["manifest.json"],
    cmd = "tar -xOf ./$(location :tarball.tar) manifest.json > $@",
)

write_file(
    name = "expected_RepoTags",
    out = "expected_RepoTags.json",
    content = [str(tags)],
)

assert_json_matches(
    name = "check_tags",
    file1 = ":tar_manifest",
    file2 = ":expected_RepoTags",
    filter1 = ".[0].RepoTags",
)

# SMOKE TEST: oci_image from an external repo
build_test(
    name = "test_external",
    targets = ["@rules_oci//examples/assertion/empty"],
)
