load("//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@aspect_bazel_lib//lib:testing.bzl", "assert_contains")
load(":transition.bzl", "multi_arch")
# load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "app_lib",
    srcs = ["main.go"],
    importpath = "example.com/custom_registry/app",
    visibility = ["//visibility:private"],
    deps = ["@com_github_google_go_cmp//cmp"],
)

go_binary(
    name = "app",
    embed = [":app_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "app_layer",
    srcs = [":app"],
    # If the binary depends on RUNFILES, uncomment the attribute below.
    # include_runfiles = True
)

# distroless demo (static) ##############################################################
oci_image(
    name = "distroless_static_image",
    base = "@distroless_static",
    entrypoint = ["/app"],
    tars = [":app_layer"],
)

# bazel build :distroless_static_tar
# docker load --input ../../bazel-bin/examples/go/distroless_static_tar/tarball.tar  
# docker run --rm distroless_static:example
oci_tarball(
    name = "distroless_static_tar",
    image = ":distroless_static_image",
    repo_tags = ["distroless_static:example"],
)

# chainguard demo (static) ##############################################################
oci_image(
    name = "chainguard_static_image",
    base = "@chainguard_static",
    entrypoint = ["/app"],
    tars = [":app_layer"],
)

# bazel build :chainguard_static_tar
# docker load --input ../../bazel-bin/examples/go/chainguard_static_tar/tarball.tar  
# docker run --rm chainguard_static:example
oci_tarball(
    name = "chainguard_static_tar",
    image = ":chainguard_static_image",
    repo_tags = ["chainguard_static:example"],
)
