load("@aspect_bazel_lib//lib:tar.bzl", "tar")
load("@aspect_bazel_lib//lib:testing.bzl", "assert_contains")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("//oci:defs.bzl", "oci_image")

tar(
    name = "app",
    srcs = ["test.bash"],
)

oci_image(
    name = "middle_image",
    base = "@ubuntu_linux_amd64",
    cmd = ["test.sh"],
    env = {
        "ENV1": "$PATH:/test",
        "ENV2": "/prepend:${PATH}:/test2",
        "ENV3": "key1=value1 key2=value2",
    },
    tars = [":app"],
)

oci_image(
    name = "image",
    base = ":middle_image",
    env = {
        "ENV4": "${ENV3} key3=value3",
    },
)

container_structure_test(
    name = "test",
    configs = ["test.yaml"],
    image = ":image",
)

genrule(
    name = "hash",
    srcs = [":image"],
    outs = ["sha256.sum"],
    cmd = "$(JQ_BIN) -r '.manifests[0].digest' $(location :image)/index.json > $@",
    toolchains = ["@jq_toolchains//:resolved_toolchain"],
)

assert_contains(
    name = "check_digest",
    actual = ":hash",
    expected = "sha256:71b67123d22c29a52e69c46e77bf63eced4c0d21c46e7d1c346c6afe7c79ca01",
)
