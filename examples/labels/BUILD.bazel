load("//oci:defs.bzl", "oci_image", "structure_test")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

pkg_tar(
    name = "app",
    srcs = ["test.bash"],
)

write_file(
    name = "labels",
    out = "labels.txt",
    content = [
        # TODO(alex): show how this can be produced by a stamp-aware rule so the 0.0.0 can be replaced
        "org.opencontainers.image.version=0.0.0",
        "org.opencontainers.image.source=https://github.com/bazel-contrib/rules_oci",
    ],
)

oci_image(
    name = "image",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    base = "//examples:base",
    cmd = ["test.sh"],
    labels = ":labels",
    os = "linux",
    tars = ["app.tar"],
)

structure_test(
    name = "test",
    config = ["test.yaml"],
    image = ":image",
)

# Test again, using the macro-provided syntax sugar where labels is a dict.
oci_image(
    name = "image_labels_dict",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    base = "//examples:base",
    cmd = ["test.sh"],
    labels = {
        "org.opencontainers.image.version": "0.0.0",
        "org.opencontainers.image.source": "https://github.com/bazel-contrib/rules_oci",
    },
    os = "linux",
    tars = ["app.tar"],
)

structure_test(
    name = "test2",
    config = ["test.yaml"],
    image = ":image_labels_dict",
)
